basePath: /api
definitions:
  feed.CreateRequest:
    properties:
      title:
        type: string
      url:
        type: string
    required:
    - title
    - url
    type: object
  feed.Presenter:
    properties:
      id:
        type: string
      syncedAt:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  user.CreateRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.Presenter:
    properties:
      id:
        type: string
    type: object
  user.UpdatePasswordRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
host: localhost:8080
info:
  contact: {}
  title: PCast REST-API
  version: "0.1"
paths:
  /feeds:
    get:
      description: Retrieve all feeds from the store
      parameters:
      - description: User ID
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/feed.Presenter'
            type: array
      summary: Get all feeds
      tags:
      - feeds
    post:
      consumes:
      - application/json
      description: Create a new feed with the data provided in the request
      parameters:
      - description: CreateRequest data
        in: body
        name: feed
        required: true
        schema:
          $ref: '#/definitions/feed.CreateRequest'
      - description: User ID
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/feed.Presenter'
      summary: Create a new feed
      tags:
      - feeds
  /feeds/{id}:
    delete:
      description: Delete a feed with the given feed ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: Feed deleted successfully
      summary: Delete a feed
      tags:
      - feeds
  /feeds/{id}/sync:
    put:
      description: Sync a feed with the given feed ID
      parameters:
      - description: Feed ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "204":
          description: Feed synced successfully
      summary: Sync a feed
      tags:
      - feeds
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user with the data provided in the request
      parameters:
      - description: CreateRequest data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Presenter'
      summary: Create a new user
      tags:
      - user
  /user/password:
    put:
      consumes:
      - application/json
      description: Update user password with the data provided in the request
      parameters:
      - description: User ID
        in: header
        name: Authorization
        required: true
        type: string
      - description: UpdatePasswordRequest data
        in: body
        name: passwords
        required: true
        schema:
          $ref: '#/definitions/user.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update user password
      tags:
      - user
swagger: "2.0"
